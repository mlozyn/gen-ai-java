plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'

    id 'jacoco'
}

group = 'com.ml.training'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    // spring
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // https://mvnrepository.com/artifact/com.google.code.findbugs/jsr305
    implementation 'com.github.spotbugs:spotbugs-annotations:4.8.6'

    // lombok
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // langchain4j
    implementation(platform("dev.langchain4j:langchain4j-bom:${langchain_version}"))
    implementation 'dev.langchain4j:langchain4j'
    implementation 'dev.langchain4j:langchain4j-open-ai'

    implementation 'dev.langchain4j:langchain4j-document-parser-apache-pdfbox'

    implementation 'dev.langchain4j:langchain4j-azure-open-ai'
    implementation 'dev.langchain4j:langchain4j-hugging-face'

    // built in embedding model
    implementation 'dev.langchain4j:langchain4j-embeddings-all-minilm-l6-v2'

    implementation 'com.azure:azure-ai-openai:1.0.0-beta.11'

    // internal
    implementation 'com.ml.training:gen-ai-dev-core:1.0.0'

    // common
    implementation 'org.apache.commons:commons-lang3:3.17.0'
    implementation 'org.apache.commons:commons-collections4:4.4'

    // test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

}

jar {
    enabled = false
}

gradle.projectsEvaluated {
    tasks.withType(JavaCompile) {
        options.compilerArgs += ['-Xlint:unchecked', '-Xlint:deprecation']
    }
}

test {
    useJUnitPlatform()
    finalizedBy jacocoTestReport
}

jacocoTestReport {
    dependsOn test

    reports {
        xml.required = true
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir("reports/jacoco/html")
    }
}
